import numpy as np
import matplotlib.pyplot as plt


#Problema 2.38
#Masa del Sol y JÃ¹piter, respectivamente:
m1=1.989e30
m2=1.899e27
#Razon de masas de m2:
pi2=m2/(m1+m2)
pi1=m1/(m1+m2)
#Distancia hasta el Sol, en kilometros:
r12=7.78e8
#Calculando L4 y L5:
L4=np.array([r12/2-pi2*r12, (np.sqrt(3)/2)*r12])
L5=np.array([r12/2-pi2*r12, -(np.sqrt(3)/2)*r12])
#Definiendo la funcion para encontrar L1,L2, y L3:
def f(xi,pi2):
    return (1 - pi2) / (np.abs(xi + pi2))**3 * (xi + pi2) + pi2 / (np.abs(xi + pi2 - 1))**3 * (xi + pi2 - 1) - xi

#Se define un rango de valores para xi, recordando que es 
#una razon entre x y r12:
xi=np.linspace(-1.2,1.2,1000000)
#Evaluando los valores de xi en f y asignandolos a una 
#variable f:
f=f(xi,pi2)
#Graficando a f:
fig, ax=plt.subplots()
plt.plot(xi,f)
plt.xlim(-1.2,1.2)
plt.ylim(-1.2,1.2)
plt.grid()
ax.axhline(y=0, color='k')
ax.axvline(x=0, color='k')
plt.show()
#Encontrando las soluciones para L1, L2 y L3:
i=np.where((np.abs(f))<0.00001)
print(i)
for j in i:
    print(xi[j])
#Los puntos lagrangianos serian entonces:
L3=xi[83333]*r12
print('L3 esta a ',L3,'km')
L2=xi[920847]*r12
print('L2 esta a ',L2,' km')
L1=xi[912510]*r12
print('L1 esta a ',L1, ' km')
